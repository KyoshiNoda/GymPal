import type {GetServerSidePropsContext, NextPage} from 'next'
import Head from 'next/head'
import {useSession, signIn, signOut} from 'next-auth/react'
import {FaDiscord} from 'react-icons/fa'
import {useRouter} from 'next/router'

import {getServerAuthSession} from 'src/server/common/get-server-auth-session'
import Theme from 'src/components/theme'

const Home: NextPage = () => {
	const {data: session} = useSession()
	const router = useRouter()

	return (
		<>
			<Head>
				<title>Gym Pal</title>
				<meta name='description' content='Generated by create-t3-app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<main className='container mx-auto flex flex-col gap-4 p-4'>
				<Theme />
				<h1 className='text-center text-4xl font-bold'>Hello Gym Pal</h1>
				{session ? (
					<div className='flex flex-col items-center justify-around gap-4'>
						<div className='flex flex-col gap-4'>
							<p>Logged in as {session?.user?.email}</p>
						</div>
						<div className='flex items-center gap-4'>
							<p
								className='cursor-pointer rounded border-2 border-gray-400 p-2'
								onClick={() => router.push('/workout')}
							>
								Workout
							</p>
							<p
								className='cursor-pointer rounded border-2 border-gray-400 p-2'
								onClick={() => router.push('/user')}
							>
								User
							</p>
							<p
								className='cursor-pointer rounded border-2 border-gray-400 p-2'
								onClick={() => signOut()}
							>
								Logout
							</p>
						</div>
					</div>
				) : (
					<div>
						<p>Not signed in</p>
						<button
							onClick={() =>
								signIn('discord', {
									callbackUrl: `/`,
								})
							}
							className='rounded border border-black p-4'
						>
							Discord
						</button>
					</div>
				)}
				<div className='min-h-screen'>
					<div className='sticky top-[80vh] flex justify-around bg-black p-4'>
						<FaDiscord className='text-8xl text-purple-400' />
						<div className='cols-8 grid grid'>
							<div className='text-purple-400'>makyfj</div>
							<div className='flex justify-around bg-purple-400 p-1'>
								<div>Franklin</div>
							</div>
						</div>

						<div className='cols-8 grid grid'>
							<div className='text-purple-400'>CDDR1</div>
							<div className='flex justify-around bg-purple-400 p-1'>
								<div>Carlos</div>
							</div>
						</div>

						<div className='cols-8 grid grid'>
							<div className='text-purple-400'>KyoshiNoda</div>
							<div className='flex justify-around bg-purple-400 p-1'>
								Kyoshi
							</div>
						</div>

						<div className='cols-8 grid grid'>
							<div className='text-purple-400'>Keiaus</div>
							<div className='flex justify-around bg-purple-400 p-1'>Keith</div>
						</div>
					</div>
				</div>
			</main>
		</>
	)
}

export default Home

export const getServerSideProps = async (ctx: GetServerSidePropsContext) => {
	return {
		props: {
			session: await getServerAuthSession(ctx),
		},
	}
}
